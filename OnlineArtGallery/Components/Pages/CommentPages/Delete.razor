@page "/comments/delete"
@using Microsoft.EntityFrameworkCore
@using OnlineArtGallery.Domain
@inject IDbContextFactory<OnlineArtGallery.Data.OnlineArtGalleryContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete Comment</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>Comment</h2>
    <hr />
    @if (comment is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">DiscussionId</dt>
            <dd class="col-sm-10">@comment.DiscussionId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Text</dt>
            <dd class="col-sm-10">@comment.Text</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateCreated</dt>
            <dd class="col-sm-10">@comment.DateCreated</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateUpdated</dt>
            <dd class="col-sm-10">@comment.DateUpdated</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CreatedBy</dt>
            <dd class="col-sm-10">@comment.CreatedBy</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">UpdatedBy</dt>
            <dd class="col-sm-10">@comment.UpdatedBy</dd>
        </dl>
        <EditForm method="post" Model="comment" OnValidSubmit="DeleteComment" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(comment is null)">Delete</button> |
            <a href="/comments">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Comment? comment;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        comment = await context.Comment.FirstOrDefaultAsync(m => m.Id == Id);

        if (comment is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteComment()
    {
        using var context = DbFactory.CreateDbContext();
        context.Comment.Remove(comment!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/comments?discussionid="+comment.DiscussionId);
    }
}
